spring:
  cloud:
    gateway:
      routes:
        - id: app
          uri: lb://app
          predicates:
            - Path=/app/**
          filters:
            - Auth
        - id: form
          uri: lb://form
          predicates:
            - Path=/form/**
          filters:
            - Auth
        - id: datacenter
          uri: lb://datacenter
          predicates:
            - Path=/datacenter/**
          filters:
            - Auth
        - id: dashboard
          uri: lb://dashboard
          predicates:
            - Path=/dashboard/**
          filters:
            - Auth
        - id: permission
          uri: lb://permission
          predicates:
            - Path=/permission/**
          filters:
            - Auth
        - id: workflow
          uri: lb://workflow
          predicates:
            - Path=/workflow/**
          filters:
            - Auth
        - id: agg
          uri: lb://agg
          predicates:
            - Path=/agg/**
          filters:
            - Auth
        - id: usercenter
          uri: lb://usercenter
          predicates:
            - Path=/usercenter/**
          filters:
            - Auth
        - id: cloudreve
          uri: lb://cloudreve
          predicates:
            - Path=/cloudreve/**
          filters:
            - Auth


        - id: openapi-form
          uri: lb://form
          predicates:
            - Path=/open/form/**
          filters:
            - OpenapiAuth
            - UserRateLimiter
        - id: openapi-permission
          uri: lb://permission
          predicates:
            - Path=/open/permission/**
          filters:
            - OpenapiAuth
            - UserRateLimiter
        - id: openapi-usercenter
          uri: lb://usercenter
          predicates:
            - Path=/open/usercenter/**
          filters:
            - OpenapiAuth
            - UserRateLimiter
        - id: openapi-app
          uri: lb://app
          predicates:
            - Path=/open/app/**
          filters:
            - OpenapiAuth
            - UserRateLimiter
  #redis 配置
  redis:
    database: 8
    host: 127.0.0.1
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    password: ""
    port: 6379

openapi:
  user:
    ratelimiter: 1000

logging:
  level:
    com.polaris.lesscode.gateway.provider.UserProvider: DEBUG